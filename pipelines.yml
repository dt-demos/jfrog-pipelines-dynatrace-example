resources:

  - name: gitRepo   
    type: GitRepo         # GitRepo resource provides connectivity to the specified GitHub repo
    configuration:
      gitProvider: githubIntegration                      
      path: dt-demos/jfrog-pipelines-dynatrace-example    
      branches:
        include: demo
      buildOn:
        commit: true
  
  - name: catalogFileSpec
    type: FileSpec
    configuration:
      sourceArtifactory: artifactoryIntegration
      pattern: "art-maven-dynatrace/demos/dt-orders/catalog-service/1/catalog-service-1.jar"
      recursive: false
      flat: true

  - name: catalogDockerImage
    type: Image
    configuration:
      registry: artifactoryIntegration                                    
      sourceRepository: default-docker-local                             
      imageName: dynatracedemos.jfrog.io/art-docker-dynatrace/catalog     
      imageTag: ${run_number}

  - name: catalogBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: artifactoryIntegration   
      buildName: catalog                                 
      buildNumber: ${run_number}

  - name: catalogHelmChart
    type: HelmChart
    configuration:
      sourceArtifactory: artifactoryIntegration       
      repository: art_dynatrace_charts                
      chart: catalog                           
      version: 0.1.0                              

pipelines:
  - name: dynatraceDemo
    configuration:
      environmentVariables:
        readOnly:
          DT_TAG_PROJECT: "dt-orders"
          DT_TAG_STAGE: "dev"
          DT_TAG_SERVICE: "order-service"
          CHART_REPO: ${res_catalogHelmChart_repository}

    steps:
      - name: DockerBuild
        type: DockerBuild
        configuration:
          affinityGroup: buildAndPush
          integrations:
            - name: artifactoryIntegration
          inputResources:
            - name: gitRepo
            - name: catalogFileSpec
          dockerFileLocation: catalog
          dockerFileName: Dockerfile
          dockerImageName: dynatracedemos.jfrog.io/art-docker-dynatrace/catalog
          dockerImageTag: ${run_number}
          dockerOptions: --build-arg RESOURCE_PATH=${res_catalogFileSpec_resourcePath}

      - name: DockerPush
        type: DockerPush
        configuration:
          affinityGroup: buildAndPush
          autoPublishBuildInfo: true
          integrations:
            - name: artifactoryIntegration                  
          targetRepository: art-docker-dynatrace            
          inputSteps:
            - name: DockerBuild
          outputResources:
            - name: catalogBuildInfo                         
            - name: catalogDockerImage                       

      - name: HelmPublish
        type: HelmPublish
        configuration:
          affinityGroup: helm_install
          helmVersion: 3                                    
          chartPath: chart
          inputSteps:
            - name: DockerPush
          inputResources:
            - name: gitRepo
              trigger: false
            - name: catalogDockerImage
          outputResources:
            - name: catalogHelmChart                        
        execution:
          onStart:
            - APP_VERSION=0.0.$run_number
            - VALUES_IMAGE=${res_catalogDockerImage_imageName}
            - VALUES_TAG=${res_catalogDockerImage_imageTag}
            - echo "CHART_VERSION = $CHART_VERSION"
            - echo "VALUES_IMAGE = $VALUES_IMAGE"
            - echo "VALUES_TAG = $VALUES_TAG"
            - pushd $res_gitRepo_resourcePath/chart
            - "sed -ie \"s|^image: .*$|image: $VALUES_IMAGE|\" values.yaml"
            - "sed -ie \"s|^imageTag: .*$|imageTag: $VALUES_TAG|\" values.yaml"
            - "sed -ie \"s|^appVersion: .*$|appVersion: $APP_VERSION|\" Chart.yaml"
            - cat values.yaml
            - cat Chart.yaml
            - popd

      - name: HelmDeploy
        type: HelmDeploy
        configuration:
          lint: true
          dryRun: true 
          helmVersion: 3
          affinityGroup: helm_install
          releaseName: catalog
          integrations:
            - name: k8sIntegration
            - name: artifactoryIntegration
          inputResources:
            - name: catalogHelmChart
            - name: catalogDockerImage
          inputSteps:
            - name: HelmPublish
        execution:
          onSuccess:
            - kubectl config current-context
            - kubectl get pods --all-namespaces
            - add_run_variables CLUSTER="$(kubectl config current-context)"

      - name: modifyHelmChartProperties
        type: Bash
        configuration:
          affinityGroup: helm_install
          integrations:
            - name: artifactoryIntegration
          inputResources:
            - name: catalogHelmChart
            - name: gitRepo
          inputSteps:
            - name: HelmDeploy
        execution:
          onExecute:
            - JFROG_BASE_URL=${int_artifactoryIntegration_url
            - JFROG_API_KEY=${int_artifactoryIntegration_apikey}
            - CHART=catalog-${res_catalogHelmChart_version}
            - $res_gitRepo_resourcePath/updateHelmChartProperties.sh ${JFROG_BASE_URL} ${JFROG_API_KEY} ${CHART_REPO} ${CHART} ${CLUSTER}

      - name: postDynatraceEvent
        type: Bash
        configuration:
          affinityGroup: helm_install
          integrations:
            - name: dynatraceIntegration
          inputResources:
            - name: gitRepo
            - name: catalogHelmChart
          inputSteps:
            - name: modifyHelmChartProperties
        execution:
          onExecute:
            - DT_BASEURL=${int_dynatraceIntegration_DT_URL}
            - DT_API_TOKEN=${int_dynatraceIntegration_DT_API_TOKEN}
            - DEPLOYMENT_VERSION=${run_number}
            - CI_BACK_LINK=${JFROG_CLI_BUILD_URL}
            - SOURCE="JFrog pipeline"
            - $res_gitRepo_resourcePath/sendDynatraceEvent.sh ${DT_BASEURL} ${DT_API_TOKEN} ${DT_TAG_PROJECT} ${DT_TAG_STAGE} ${DT_TAG_SERVICE} ${DEPLOYMENT_VERSION} ${CI_BACK_LINK} ${SOURCE}